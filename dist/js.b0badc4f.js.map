{"version":3,"sources":["src/js/index.js"],"names":["savedBooks","Book","id","name","author","category","year","price","artwork","addNewBook","event","preventDefault","form","document","getElementById","storedBooks","JSON","parse","localStorage","getItem","booksArray","Array","isArray","book","length","elements","value","parseFloat","updatedBooks","concat","_toConsumableArray","setItem","stringify","reset","bookTemplate","showBooks","console","log","books","booksContainer","querySelector","forEach","innerHTML","querySelectorAll","button","addEventListener","editBook","getAttribute","makeFieldsEditable","bookElement","isEditable","field","contentEditable","saveEditedBook","bookId","updatedBook","innerText","slice","bookIndex","findIndex","saveButton","editButton","textContent","style","display","parseInt","window"],"mappings":"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","file":"js.b0badc4f.js","sourceRoot":"..","sourcesContent":["// ==================== localstorage.js ==================== //\n\nlet savedBooks = [];\n\n// CONSTRUCTOR FUNCTION TO POPULATE BOOK OBJECT WITH FORM DATA\nfunction Book(id, name, author, category, year, price, artwork) {\n  this.id = id;\n  this.name = name;\n  this.author = author;\n  this.category = category;\n  this.year = year;\n  this.price = price;\n  this.artwork = artwork;\n}\n\n// COLLECTS FORM DATA AND CREATES NEW OBJECT\nfunction addNewBook(event) {\n  event.preventDefault();\n  const form = document.getElementById(\"new-book-form\");\n\n  const storedBooks = JSON.parse(localStorage.getItem(\"books\"));\n\n  const booksArray = !Array.isArray(storedBooks) ? [] : storedBooks;\n\n  const book = new Book(\n    storedBooks.length + 1,\n    form.elements[0].value,\n    form.elements[1].value,\n    form.elements[2].value,\n    form.elements[3].value,\n    parseFloat(form.elements[4].value),\n    form.elements[5].value\n  );\n\n  // APPEND THE NEW BOOK TO THE ARRAY AT LOCALSTORAGE\n  const updatedBooks = [...booksArray, book];\n\n  //   SETS UPDATED BOOKS ARRAY IN LOCALSTORAGE\n  localStorage.setItem(\"books\", JSON.stringify(updatedBooks));\n  form.reset();\n}\n\n// ==================== createBookListing.js ==================== //\n\n// FORM SUBMIT EVENT\nconst form = document.getElementById(\"new-book-form\");\nform.addEventListener(\"submit\", addNewBook);\n\nfunction bookTemplate(book) {\n  return `\n    <article id=${book.id} class=\"single-book\">\n    <img src=\"./src/img/book-test.jpg\" alt=\"\" />\n    <div class=\"book-info\">\n      <h3 class=\"single-book__name editable\">${book.name}</h3>\n      <p class=\"single-book__author editable\">${book.author}</p>\n      <p class=\"single-book_category editable\">${book.category}</p>\n      <p class=\"single-book__years editable\">${book.year}</p>\n      <p class=\"single-book__price editable\">${book.price}â‚¬</p>\n    </div>\n    <div class=\"book-controls\">\n      <button class=\"btn edit\" data-book-id=\"${book.id}\">Edit</button>\n      <button class=\"btn save\" data-book-id=\"${book.id}\" style=\"display:none\">Save</button>\n      <button class=\"btn delete\">Delete</button>\n    </div>\n  </article>\n      `;\n}\n\nfunction showBooks() {\n  console.log(\"show\");\n  let books = JSON.parse(localStorage.getItem(\"books\"));\n  const booksContainer = document.querySelector(\".books-container\");\n\n  if (!Array.isArray(books)) {\n    books = [];\n  }\n\n  //  Populates booksContainer with book templates\n  books.forEach((book) => {\n    booksContainer.innerHTML += bookTemplate(book);\n  });\n\n  // Selects all Edit buttons\n  const editButtons = document.querySelectorAll(\".btn.edit\");\n\n  // Iterates through each Edit button\n  editButtons.forEach((button) => {\n    // Attaches a click event listener to each button\n    button.addEventListener(\"click\", () => {\n      // Retrieves the bookId from the data-book-id attribute\n      const bookId = button.getAttribute(\"data-book-id\");\n\n      // Calls the editBook function with the retrieved bookId\n      editBook(bookId);\n    });\n  });\n}\n\nwindow.addEventListener(\"load\", showBooks);\n\n// ==================== editBook.js ==================== //\n\nfunction makeFieldsEditable(bookElement, isEditable) {\n  bookElement.querySelectorAll(\".editable\").forEach((field) => {\n    field.contentEditable = isEditable;\n  });\n}\n\nfunction saveEditedBook(bookElement, bookId) {\n  let updatedBook = {\n    id: bookId,\n    name: bookElement.querySelector(\".single-book__name\").innerText,\n    author: bookElement.querySelector(\".single-book__author\").innerText,\n    category: bookElement.querySelector(\".single-book_category\").innerText,\n    year: bookElement.querySelector(\".single-book__years\").innerText,\n    price: parseFloat(\n      bookElement.querySelector(\".single-book__price\").innerText.slice(0, -1)\n    ),\n    artwork: \"\",\n  };\n\n  // Retrieve storedBooks from localStorage\n  const storedBooks = JSON.parse(localStorage.getItem(\"books\"));\n\n  // Find the index of the book to update\n  const bookIndex = storedBooks.findIndex((book) => book.id === bookId);\n\n  // Update the book in the storedBooks array\n  storedBooks[bookIndex] = updatedBook;\n\n  localStorage.setItem(\"books\", JSON.stringify(updatedBook));\n  makeFieldsEditable(bookElement, false);\n}\n\nfunction editBook(bookId) {\n  const bookElement = document.getElementById(bookId);\n\n  const saveButton = bookElement.querySelector(\".btn.save\");\n  const editButton = bookElement.querySelector(\".btn.edit\");\n\n  if (editButton.textContent === \"Edit\") {\n    makeFieldsEditable(bookElement, true);\n    editButton.textContent = \"Cancel\";\n    saveButton.style.display = \"inline-block\";\n  } else {\n    makeFieldsEditable(bookElement, false);\n    editButton.textContent = \"Edit\";\n    saveButton.style.display = \"none\";\n  }\n\n  saveButton.addEventListener(\"click\", () => {\n    saveEditedBook(bookElement, parseInt(bookId));\n    editButton.textContent = \"Edit\";\n    saveButton.style.display = \"none\";\n  });\n}\n"]}